Table structure:
===============
each table have name else it qualifies to our schema.
at least one col.
if you are login as sysdba and want to create table for scott then use

select * from person; : to show all fields data in the table.

create table scott.person(parameters);

Constraint:
===========
alter table person add constraint pk_person primary key(id); : to add constraint of primary key in existing table
create table cities(city varchar2(50),zipcode(2), constraint pk_cities primary key (city,zipcode));
select constraint_name,constraint_type from user_constraints where table_name='cities'; : to show constrain list of the select user.
select constraint_name,constraint_type from dba_constraints where table_name='cities'; : to show constrain list of the whole system db.
select column_name,position from user_cons_columns where constraint_name='pk_cities'; : to show the col.name,position in table of selected table.
select column_name,position from user_cons_columns where constraint_name in (select constarint_name from user_constraints where table_name='cities'); : to show contrainname,colname,position.
select default_tablespace from user_users; to show default tablespace at where our tablees are going.
select default_tablespace from dba_users; to show default tablespace at where our tablees are going.
create table colorado_person as select * from person where st='co'; : parallel manupluation create table and insert data in it.
alter table person add zipcode varchar2(10); : add col. in table.
alter table person add gender varchar2(10) default 'f'; 
alter table person modify gender varchar2(10) default 'f'; 
select column_name,data_default,data_type,nullable from user_tab_columns where table_name='person'; its just equivalance to "desc person"
alter table person add constraint uk_person_username unique(username); : make unique 
update person set gender='m' where id='6'; to update key.
alter table person add constraint ck_person_gender check(gender in('m','f')); : to boud or define set of values that can be accepted in "gender".
alter table person add constraint fk_person_cities foreign key(city,st) references cities(city,state); : to use foregin key.
select a.constraint_name, constrain_type,column_name,r_costraint_name from user_constraints a,user_cons_columns b where a.constraint_name = b.constraint_name and a.table_name = 'person'; to show constraint name,constraint type,col.name,relation constraint key name.
alter table person disable constraint fk_person_cities; : to turn off foreign key.
alter table users add constraint uk_users_person foreign key (username) references person(username) deferrable initally deffered; :"deferrable" mean it can be turn on or off. "deferred" mean its off."immediate" mean on.

Note:
Foregin Key is the key which use parent and child relation ship. if the parent have thing relation with child then child must have that values in it accpeting state.else it will rejected.
mean child accept that input values that are in set of its parents.

Sequences:
==========
alter table users add id number(5); : 
create sequence  username_seq start with 10 increment by 1; : 
select sequence_name, last_number, increment_by from user_sequences; : to show list of sequences that was updates last time.
update users set id = username_seq.nextval; :  "nextval" is the function which updates all fields with increment. in username_seq mention.
select username_seq.currval from dual;:  "currval" tells us the current value of sequence.
select max(id) from users; : to tell the max value from col."id" of table "users".

Views:
======
its like table.its an object in database.
it does not conatin data.its is use for views particular table or tables in structure form.

create or replace view person_view(name) as select last || ',' || first from person order by last,first; : "create" mean create a view for table. "replace" mean if there is any view matching this view name or structure then it will be replaced by this new one.
->>>>"person_view(name)" is view name and the select col"name". "select last || ',' || first" its is concatenated in one col.(first and last). "order by last,first" is the pattern of displaying.

select * from person_view; : to show the content that is generated by this view(person_view).
create or replace view person_view as select last, first, city, st from person order by last,first; : generate another view.not concatenating any col. in to one.
update person_view set first='bart' where last='simpson'; : to update the view.
commit; : to change permanately.

select text from user_views where view_name = 'person_view'; : to show the statements in the "person_view" view.
drop view person_view; : to drop the selected view.
select text from dba_views where view_name ='DBA_TABLES'; to show the all views of dba table.(i must login as sysdba to view this).

Note:
tables,views sequences are objects in db.

login in as sysdba.

select object_name,object_type from dba_objects where owner='scott'; to list all objects contain by "scott user".
Note:
foriegn keys are not object.while primary key and unique key are mention as "index" in object type.


